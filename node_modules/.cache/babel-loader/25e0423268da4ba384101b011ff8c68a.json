{"ast":null,"code":"import _slicedToArray from\"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,createContext,useContext}from'react';import{languageOptions,dictionaryList}from'../languages';// Create context with default language\nexport var LanguageContext=createContext({language:languageOptions[0],dictionary:dictionaryList[languageOptions[0].id]});// Language context\nexport function LanguageContextProvider(props){var languageContext=useContext(LanguageContext);var _useState=useState(languageContext.language),_useState2=_slicedToArray(_useState,2),language=_useState2[0],_setLanguage=_useState2[1];var _useState3=useState(languageContext.dictionary),_useState4=_slicedToArray(_useState3,2),dictionary=_useState4[0],setDictionary=_useState4[1];var provider={language:language,dictionary:dictionary,setLanguage:function setLanguage(selectedLanguage){_setLanguage(selectedLanguage);setDictionary(dictionaryList[selectedLanguage.id]);}};return React.createElement(LanguageContext.Provider,{value:provider},props.children);};// Access text based on selected language\nexport function Text(props){var languageContext=useContext(LanguageContext);return languageContext.dictionary[props.tid];};","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/contexts/LanguageContext.js"],"names":["React","useState","createContext","useContext","languageOptions","dictionaryList","LanguageContext","language","dictionary","id","LanguageContextProvider","props","languageContext","setLanguage","setDictionary","provider","selectedLanguage","children","Text","tid"],"mappings":"kKAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,aAA1B,CAAyCC,UAAzC,KAA2D,OAA3D,CAEA,OAASC,eAAT,CAA0BC,cAA1B,KAAgD,cAAhD,CAEA;AACA,MAAO,IAAMC,CAAAA,eAAe,CAAGJ,aAAa,CAAC,CACzCK,QAAQ,CAAEH,eAAe,CAAC,CAAD,CADgB,CAEzCI,UAAU,CAAEH,cAAc,CAACD,eAAe,CAAC,CAAD,CAAf,CAAmBK,EAApB,CAFe,CAAD,CAArC,CAKP;AACA,MAAO,SAASC,CAAAA,uBAAT,CAAiCC,KAAjC,CAAwC,CAC3C,GAAMC,CAAAA,eAAe,CAAGT,UAAU,CAACG,eAAD,CAAlC,CAD2C,cAEXL,QAAQ,CAACW,eAAe,CAACL,QAAjB,CAFG,wCAEpCA,QAFoC,eAE1BM,YAF0B,8BAGPZ,QAAQ,CAACW,eAAe,CAACJ,UAAjB,CAHD,yCAGpCA,UAHoC,eAGxBM,aAHwB,eAK3C,GAAMC,CAAAA,QAAQ,CAAG,CACbR,QAAQ,CAARA,QADa,CAEbC,UAAU,CAAVA,UAFa,CAGbK,WAAW,CAAE,qBAACG,gBAAD,CAAsB,CAC/BH,YAAW,CAACG,gBAAD,CAAX,CACAF,aAAa,CAACT,cAAc,CAACW,gBAAgB,CAACP,EAAlB,CAAf,CAAb,CACH,CANY,CAAjB,CASA,MACI,qBAAC,eAAD,CAAiB,QAAjB,EAA0B,KAAK,CAAEM,QAAjC,EACKJ,KAAK,CAACM,QADX,CADJ,CAKH,EAED;AACA,MAAO,SAASC,CAAAA,IAAT,CAAcP,KAAd,CAAqB,CACxB,GAAMC,CAAAA,eAAe,CAAGT,UAAU,CAACG,eAAD,CAAlC,CAEA,MAAOM,CAAAA,eAAe,CAACJ,UAAhB,CAA2BG,KAAK,CAACQ,GAAjC,CAAP,CACH","sourcesContent":["import React, { useState, createContext, useContext } from 'react';\n\nimport { languageOptions, dictionaryList } from '../languages';\n\n// Create context with default language\nexport const LanguageContext = createContext({\n    language: languageOptions[0],\n    dictionary: dictionaryList[languageOptions[0].id]\n});\n\n// Language context\nexport function LanguageContextProvider(props) {\n    const languageContext = useContext(LanguageContext);\n    const [language, setLanguage] = useState(languageContext.language);\n    const [dictionary, setDictionary] = useState(languageContext.dictionary);\n\n    const provider = {\n        language,\n        dictionary,\n        setLanguage: (selectedLanguage) => {\n            setLanguage(selectedLanguage);\n            setDictionary(dictionaryList[selectedLanguage.id]);\n        }\n    };\n\n    return (\n        <LanguageContext.Provider value={provider}>\n            {props.children}\n        </LanguageContext.Provider>\n    );\n};\n\n// Access text based on selected language\nexport function Text(props) {\n    const languageContext = useContext(LanguageContext);\n\n    return languageContext.dictionary[props.tid];\n};"]},"metadata":{},"sourceType":"module"}