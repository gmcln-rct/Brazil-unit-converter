{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\nconst UnitSelect = () => {\n  const {\n    dictionary,\n    setLanguage\n  } = useContext(LanguageContext);\n  const [convertedVal, setConvertedVal] = useState(1);\n  const [amount, setAmount] = useState(1);\n  const [fromUnit, setFromUnit] = useState(5);\n  const [toUnit, setToUnit] = useState(1);\n  const [fromUnits, setfromUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    unitId: \"tspbz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    unitId: \"dspbz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    unitId: \"sspbz\",\n    conversion: 15\n  }, {\n    label: \"Teacup (BZ)\",\n    unitId: \"teacupbz\",\n    conversion: 250\n  }, {\n    label: \"Cup (BZ)\",\n    unitId: \"cupbz\",\n    conversion: 240\n  }, {\n    label: \"Teaspoon (US)\",\n    unitId: \"tspus\",\n    conversion: 4.92\n  }, {\n    label: \"Tablespoon (US)\",\n    unitId: \"tbspus\",\n    conversion: 14.79\n  }, {\n    label: \"Cup (US)\",\n    unitId: \"cupus\",\n    conversion: 240.001\n  }, {\n    label: \"Milliliter\",\n    unitId: \"ml\",\n    conversion: 1\n  }]);\n  const [toUnits, setToUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    value: \"tspbz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    value: \"dspbz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    value: \"sspbz\",\n    conversion: 15\n  }, {\n    label: \"Teacup (BZ)\",\n    value: \"teacupbz\",\n    conversion: 250\n  }, {\n    label: \"Cup (BZ)\",\n    value: \"cupbz\",\n    conversion: 240\n  }, {\n    label: \"Teaspoon (US)\",\n    value: \"tspus\",\n    conversion: 4.92\n  }, {\n    label: \"Tablespoon (US)\",\n    value: \"tbspus\",\n    conversion: 14.79\n  }, {\n    label: \"Cup (US)\",\n    value: \"cupus\",\n    conversion: 240.001\n  }, {\n    label: \"Milliliter\",\n    value: \"ml\",\n    conversion: 1\n  }]);\n  useEffect(() => {\n    setConvertedVal(amount * fromUnit / toUnit);\n  }, [amount, fromUnit, toUnit]);\n  return React.createElement(\"main\", {\n    className: \"unit-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"amount-span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Enter Amount To Convert\"), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, dictionary['tspbz']), React.createElement(\"input\", {\n    id: \"amount\",\n    label: \"Amount\" // name=\"tsp-bz\"\n    ,\n    type: \"number\",\n    autoFocus: true,\n    value: amount,\n    onChange: event => setAmount(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"select-from\",\n    value: fromUnit,\n    onChange: event => setFromUnit(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, fromUnits.map(({\n    label,\n    value,\n    unitId,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, label))), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, \"to\")), React.createElement(\"select\", {\n    className: \"select-to\",\n    value: toUnit,\n    onChange: event => setToUnit(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, toUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, label)))), React.createElement(\"section\", {\n    className: \"conversion-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, \"Converted Amount:\")), React.createElement(\"div\", {\n    className: \"converted-val\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, Number.isInteger(convertedVal) ? convertedVal : convertedVal.toFixed(2))));\n};\n\nexport default UnitSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js"],"names":["React","useContext","useState","useEffect","LanguageContext","Text","UnitSelect","dictionary","setLanguage","convertedVal","setConvertedVal","amount","setAmount","fromUnit","setFromUnit","toUnit","setToUnit","fromUnits","setfromUnits","label","unitId","conversion","toUnits","setToUnits","value","event","target","map","Number","isInteger","toFixed"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\n\nconst UnitSelect = () => {\n    const { dictionary, setLanguage } = useContext(LanguageContext);\n\n    const [convertedVal, setConvertedVal] = useState(1);\n    const [amount, setAmount] = useState(1);\n    const [fromUnit, setFromUnit] = useState(5);\n    const [toUnit, setToUnit] = useState(1);\n\n\n    const [fromUnits, setfromUnits] = useState([\n      { label: \"Teaspoon (BZ)\", unitId: \"tspbz\", conversion: 5 },\n      { label: \"Dessert spoon (BZ)\", unitId: \"dspbz\", conversion: 10 },\n      { label: \"Soup spoon (BZ)\", unitId: \"sspbz\", conversion: 15 },\n      { label: \"Teacup (BZ)\", unitId: \"teacupbz\", conversion: 250 },\n      { label: \"Cup (BZ)\", unitId: \"cupbz\", conversion: 240 },\n      { label: \"Teaspoon (US)\", unitId: \"tspus\", conversion: 4.92 },\n      { label: \"Tablespoon (US)\", unitId: \"tbspus\", conversion: 14.79 },\n      { label: \"Cup (US)\", unitId: \"cupus\", conversion: 240.001 },\n      { label: \"Milliliter\", unitId: \"ml\", conversion: 1 }\n    ]);\n\n    const [toUnits, setToUnits] = useState([\n      { label: \"Teaspoon (BZ)\", value: \"tspbz\", conversion: 5 },\n      { label: \"Dessert spoon (BZ)\", value: \"dspbz\", conversion: 10 },\n      { label: \"Soup spoon (BZ)\", value: \"sspbz\", conversion: 15 },\n      { label: \"Teacup (BZ)\", value: \"teacupbz\", conversion: 250 },\n      { label: \"Cup (BZ)\", value: \"cupbz\", conversion: 240 },\n      { label: \"Teaspoon (US)\", value: \"tspus\", conversion: 4.92 },\n      { label: \"Tablespoon (US)\", value: \"tbspus\", conversion: 14.79 },\n      { label: \"Cup (US)\", value: \"cupus\", conversion: 240.001 },\n      { label: \"Milliliter\", value: \"ml\", conversion: 1 }\n    ]);\n\n    useEffect(() => {\n        setConvertedVal(amount *fromUnit / toUnit)\n    }, [amount,fromUnit, toUnit]);\n\n \n    return (\n      <main className=\"unit-form\">\n        <section className=\"amount-span\">\n          <h2>Enter Amount To Convert</h2>\n<div>{dictionary['tspbz']}</div>\n          <input\n            id=\"amount\"\n            label=\"Amount\"\n            // name=\"tsp-bz\"\n            type=\"number\"\n            autoFocus\n            value={amount}\n            onChange={event => setAmount(event.target.value)}\n          />\n        </section>\n        <section>\n          <select\n            className=\"select-from\"\n            value={fromUnit}\n            onChange={event => setFromUnit(event.target.value)}\n          >\n            {fromUnits.map(({ label, value, unitId, conversion }) => (\n              <option key={value} value={conversion}>\n                {label}\n                {/* {Text tid={unitId} } */}\n                {/* {Text.value={unitId}} */}\n               {/* <Text tid=\"value\" /> */}\n                {/* {Text.tid=unitId} */}\n                {/* <Text tid='{value}' /> */}\n             </option>\n            ))}\n          </select>\n          <section>\n\n          <h2>to</h2>\n          </section>\n\n\n          <select\n            className=\"select-to\"\n            value={toUnit}\n            onChange={event => setToUnit(event.target.value)}\n          >\n            {toUnits.map(({ label, value, conversion }) => (\n              <option key={value} value={conversion}>\n                {label}\n              </option>\n            ))}\n          </select>\n        </section>\n        <section className=\"conversion-section\">\n            <div>\n\n          <h2>Converted Amount:</h2>\n            </div>\n          <div className=\"converted-val\">\n            {Number.isInteger(convertedVal)\n              ? convertedVal\n              : convertedVal.toFixed(2)}\n          </div>\n        </section>\n      </main>\n    );\n};\n\n\nexport default UnitSelect;\n"]},"metadata":{},"sourceType":"module"}