{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/contexts/LanguageContext.js\";\nimport React, { useState, createContext, useContext } from 'react';\nimport { languageOptions, dictionaryList } from '../languages'; // create the language context with default selected language\n\nexport const LanguageContext = createContext({\n  language: languageOptions[0],\n  dictionary: dictionaryList[languageOptions[0].id]\n}); // it provides the language context to app\n\nexport function LanguageProvider(props) {\n  const languageContext = useContext(LanguageContext);\n  const [language, setLanguage] = useState(languageContext.language);\n  const [dictionary, setDictionary] = useState(languageContext.dictionary);\n  const provider = {\n    language,\n    dictionary,\n    setLanguage: selectedLanguage => {\n      setLanguage(selectedLanguage);\n      setDictionary(dictionaryList[selectedLanguage.id]);\n    }\n  };\n  return React.createElement(LanguageContextProvider, {\n    value: provider,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, props.children);\n}\n; // get text according to id & current language\n\nexport function Text(props) {\n  const languageContext = useContext(LanguageContext);\n  return languageContext.dictionary[props.tid];\n}\n;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/contexts/LanguageContext.js"],"names":["React","useState","createContext","useContext","languageOptions","dictionaryList","LanguageContext","language","dictionary","id","LanguageProvider","props","languageContext","setLanguage","setDictionary","provider","selectedLanguage","children","Text","tid"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,UAAzC,QAA2D,OAA3D;AAEA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,cAAhD,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAGJ,aAAa,CAAC;AACzCK,EAAAA,QAAQ,EAAEH,eAAe,CAAC,CAAD,CADgB;AAEzCI,EAAAA,UAAU,EAAEH,cAAc,CAACD,eAAe,CAAC,CAAD,CAAf,CAAmBK,EAApB;AAFe,CAAD,CAArC,C,CAKP;;AACA,OAAO,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AACpC,QAAMC,eAAe,GAAGT,UAAU,CAACG,eAAD,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWM,WAAX,IAA0BZ,QAAQ,CAACW,eAAe,CAACL,QAAjB,CAAxC;AACA,QAAM,CAACC,UAAD,EAAaM,aAAb,IAA8Bb,QAAQ,CAACW,eAAe,CAACJ,UAAjB,CAA5C;AAEA,QAAMO,QAAQ,GAAG;AACbR,IAAAA,QADa;AAEbC,IAAAA,UAFa;AAGbK,IAAAA,WAAW,EAAGG,gBAAD,IAAsB;AAC/BH,MAAAA,WAAW,CAACG,gBAAD,CAAX;AACAF,MAAAA,aAAa,CAACT,cAAc,CAACW,gBAAgB,CAACP,EAAlB,CAAf,CAAb;AACH;AANY,GAAjB;AASA,SACI,oBAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEM,QAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KAAK,CAACM,QADX,CADJ;AAKH;AAAA,C,CAED;;AACA,OAAO,SAASC,IAAT,CAAcP,KAAd,EAAqB;AACxB,QAAMC,eAAe,GAAGT,UAAU,CAACG,eAAD,CAAlC;AAEA,SAAOM,eAAe,CAACJ,UAAhB,CAA2BG,KAAK,CAACQ,GAAjC,CAAP;AACH;AAAA","sourcesContent":["import React, { useState, createContext, useContext } from 'react';\n\nimport { languageOptions, dictionaryList } from '../languages';\n\n// create the language context with default selected language\nexport const LanguageContext = createContext({\n    language: languageOptions[0],\n    dictionary: dictionaryList[languageOptions[0].id]\n});\n\n// it provides the language context to app\nexport function LanguageProvider(props) {\n    const languageContext = useContext(LanguageContext);\n    const [language, setLanguage] = useState(languageContext.language);\n    const [dictionary, setDictionary] = useState(languageContext.dictionary);\n\n    const provider = {\n        language,\n        dictionary,\n        setLanguage: (selectedLanguage) => {\n            setLanguage(selectedLanguage);\n            setDictionary(dictionaryList[selectedLanguage.id]);\n        }\n    };\n\n    return (\n        <LanguageContextProvider value={provider}>\n            {props.children}\n        </LanguageContextProvider>\n    );\n};\n\n// get text according to id & current language\nexport function Text(props) {\n    const languageContext = useContext(LanguageContext);\n\n    return languageContext.dictionary[props.tid];\n};"]},"metadata":{},"sourceType":"module"}