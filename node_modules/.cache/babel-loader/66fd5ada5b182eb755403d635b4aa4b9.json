{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\nconst UnitSelect = () => {\n  const {\n    language,\n    setLanguage\n  } = useContext(LanguageContext);\n  const [convertedVal, setConvertedVal] = useState(1);\n  const [amount, setAmount] = useState(1);\n  const [fromUnit, setFromUnit] = useState(5);\n  const [toUnit, setToUnit] = useState(1);\n  const [fromUnits, setfromUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    value: \"tspbz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    value: \"dspbz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    value: \"soup-bz\",\n    conversion: 15\n  }, {\n    label: \"Teacup (BZ)\",\n    value: \"cup-tea-bz\",\n    conversion: 250\n  }, {\n    label: \"Cup (BZ)\",\n    value: \"cup-bz\",\n    conversion: 240\n  }, {\n    label: \"Teaspoon (US)\",\n    value: \"tea-us\",\n    conversion: 4.92\n  }, {\n    label: \"Tablespoon (US)\",\n    value: \"table-us\",\n    conversion: 14.79\n  }, {\n    label: \"Cup (US)\",\n    value: \"cup-us\",\n    conversion: 240\n  }, {\n    label: \"Milliliter\",\n    value: \"ml\",\n    conversion: 1\n  }]);\n  const [toUnits, setToUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    value: \"tea-bz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    value: \"dessert-bz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    value: \"soup-bz\",\n    conversion: 15\n  }, {\n    label: \"Teacup (BZ)\",\n    value: \"cup-tea-bz\",\n    conversion: 250\n  }, {\n    label: \"Cup (BZ)\",\n    value: \"cup-bz\",\n    conversion: 240\n  }, {\n    label: \"Teaspoon (US)\",\n    value: \"tea-us\",\n    conversion: 4.92\n  }, {\n    label: \"Tablespoon (US)\",\n    value: \"table-us\",\n    conversion: 14.79\n  }, {\n    label: \"Cup (US)\",\n    value: \"cup-us\",\n    conversion: 240\n  }, {\n    label: \"Milliliter\",\n    value: \"ml\",\n    conversion: 1\n  }]);\n  useEffect(() => {\n    setConvertedVal(amount * fromUnit / toUnit);\n  }, [amount, fromUnit, toUnit]); // const \n\n  function handleChange(e) {\n    // chooseTheme(e.target.value);\n    let idx = e.target.selectedIndex;\n    console.log(e.target.options[idx].value);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Dogs and cats\");\n  }\n\n  ;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"unit-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(Text, {\n    tid: \"tspbz\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    id: \"amount\",\n    label: \"Amount\",\n    name: \"tsp-bz\",\n    type: \"number\",\n    autoFocus: true,\n    value: amount,\n    onChange: event => setAmount(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"select\", {\n    className: \"select-from\",\n    value: fromUnit,\n    onChange: event => setFromUnit(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, fromUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, dictionaryList[value]))), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, \" to \"), React.createElement(\"select\", {\n    className: \"select-to\",\n    value: toUnit,\n    onChange: event => setToUnit(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95\n    },\n    __self: this\n  }, toUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, label))), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"=>\"), React.createElement(\"span\", {\n    className: \"converted-val\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, Number.isInteger(convertedVal) ? convertedVal : convertedVal.toFixed(2))));\n};\n\nexport default UnitSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js"],"names":["React","useContext","useState","useEffect","LanguageContext","Text","UnitSelect","language","setLanguage","convertedVal","setConvertedVal","amount","setAmount","fromUnit","setFromUnit","toUnit","setToUnit","fromUnits","setfromUnits","label","value","conversion","toUnits","setToUnits","handleChange","e","idx","target","selectedIndex","console","log","options","handleSubmit","preventDefault","event","map","dictionaryList","Number","isInteger","toFixed"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\n\nconst UnitSelect = () => {\n    const { language, setLanguage } = useContext(LanguageContext);\n\n    const [convertedVal, setConvertedVal] = useState(1);\n    const [amount, setAmount] = useState(1);\n    const [fromUnit, setFromUnit] = useState(5);\n    const [toUnit, setToUnit] = useState(1);\n\n    const [fromUnits, setfromUnits] = useState([\n        { label: \"Teaspoon (BZ)\", value: \"tspbz\", conversion: 5 },\n        { label: \"Dessert spoon (BZ)\", value: \"dspbz\", conversion: 10 },\n        { label: \"Soup spoon (BZ)\", value: \"soup-bz\", conversion: 15 },\n        { label: \"Teacup (BZ)\", value: \"cup-tea-bz\", conversion: 250 },\n        { label: \"Cup (BZ)\", value: \"cup-bz\", conversion: 240 },\n        { label: \"Teaspoon (US)\", value: \"tea-us\", conversion: 4.92 },\n        { label: \"Tablespoon (US)\", value: \"table-us\", conversion: 14.79 },\n        { label: \"Cup (US)\", value: \"cup-us\", conversion: 240 },\n        { label: \"Milliliter\", value: \"ml\", conversion: 1 },\n    ]);\n\n    const [toUnits, setToUnits] = useState([\n        { label: \"Teaspoon (BZ)\", value: \"tea-bz\", conversion: 5 },\n        { label: \"Dessert spoon (BZ)\", value: \"dessert-bz\", conversion: 10 },\n        { label: \"Soup spoon (BZ)\", value: \"soup-bz\", conversion: 15 },\n        { label: \"Teacup (BZ)\", value: \"cup-tea-bz\", conversion: 250 },\n        { label: \"Cup (BZ)\", value: \"cup-bz\", conversion: 240 },\n        { label: \"Teaspoon (US)\", value: \"tea-us\", conversion: 4.92 },\n        { label: \"Tablespoon (US)\", value: \"table-us\", conversion: 14.79 },\n        { label: \"Cup (US)\", value: \"cup-us\", conversion: 240 },\n        { label: \"Milliliter\", value: \"ml\", conversion: 1 },\n    ]);\n\n    useEffect(() => {\n        setConvertedVal(amount *fromUnit / toUnit)\n    }, [amount,fromUnit, toUnit]);\n\n    // const \n\n    function handleChange(e) {\n        // chooseTheme(e.target.value);\n        let idx = e.target.selectedIndex;\n\n        console.log(e.target.options[idx].value);\n        return (\n            <div>Dogs and cats</div>\n        )\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n    };\n\n\n    return (\n        <div className=\"unit-form\">\n            <Text tid=\"tspbz\" />\n\n                <span>\n\n                    <input\n                        id=\"amount\"\n                        label=\"Amount\"\n                        name=\"tsp-bz\"\n                        type='number'\n\n                        autoFocus\n                        value={amount}\n                        onChange={event => setAmount(event.target.value)}\n                    />\n                <select\n                    className=\"select-from\"\n                    value={fromUnit}\n                    onChange={event => setFromUnit(event.target.value)}\n                >\n\n                {fromUnits.map(({ label, value, conversion }) => (\n                    <option key={value} value={conversion}>\n                        {/* {label} */}\n                        {/* <Text tid=\"value\" /> */}\n                        {dictionaryList[value]}\n\n                    </option>\n                ))}\n\n                </select>\n\n                <span> to </span>\n\n\n                <select\n                    className=\"select-to\"\n                    value={toUnit}\n                    onChange={event => setToUnit(event.target.value)}\n                >\n                    {toUnits.map(({ label, value, conversion }) => (\n                        <option key={value} value={conversion}>\n                            {label}\n                        </option>\n                    ))}\n\n                </select>\n                        <span>\n                            => \n                        </span>\n                <span className='converted-val'>{(Number.isInteger(convertedVal) ? convertedVal: convertedVal.toFixed(2))}</span>\n                </span>\n\n        </div>\n    );\n};\n\n\nexport default UnitSelect;\n"]},"metadata":{},"sourceType":"module"}