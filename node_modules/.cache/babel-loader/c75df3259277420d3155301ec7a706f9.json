{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/contexts/UnitContext.js\";\nimport React, { createContext, useState } from 'react';\nimport uuid from 'uuid/v1';\nexport const UnitContext = createContext();\n\nconst UnitContextProvider = props => {\n  const [Units, setUnits] = useState([{\n    selectedOutputType: \"teaspoon\",\n    selectedInputType: \"teaspoon\",\n    inputValue: \"\",\n    conversions: [\"Brazilian\"],\n    units: [{\n      name: \"teaspoon\",\n      type: \"liquid\",\n      conversions: [{\n        inputType: \"teaspoon\",\n        conversion: x => x\n      }, {\n        inputType: \"dessert spoon\",\n        conversion: x => x / 12\n      }, {\n        inputType: \"soup spoon\",\n        conversion: x => x * 3\n      }, {\n        inputType: \"cup (Brazilian)\",\n        conversion: x => x / 30.54\n      }]\n    }]\n  }]);\n\n  const addUnit = (title, director, year) => {\n    setUnits([...Units, {\n      title,\n      director,\n      year,\n      id: uuid()\n    }]);\n  };\n\n  const removeUnit = id => {\n    setUnits(Units.filter(Unit => Unit.id !== id));\n  };\n\n  return React.createElement(Unit.Provider, {\n    value: {\n      Units,\n      addUnit,\n      removeUnit\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default UnitContextProvider;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/contexts/UnitContext.js"],"names":["React","createContext","useState","uuid","UnitContext","UnitContextProvider","props","Units","setUnits","selectedOutputType","selectedInputType","inputValue","conversions","units","name","type","inputType","conversion","x","addUnit","title","director","year","id","removeUnit","filter","Unit","children"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,OAAOC,IAAP,MAAiB,SAAjB;AAEA,OAAO,MAAMC,WAAW,GAAGH,aAAa,EAAjC;;AAEP,MAAMI,mBAAmB,GAAIC,KAAD,IAAW;AAEnC,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CAC/B;AACIO,IAAAA,kBAAkB,EAAE,UADxB;AAEIC,IAAAA,iBAAiB,EAAE,UAFvB;AAGIC,IAAAA,UAAU,EAAE,EAHhB;AAIIC,IAAAA,WAAW,EAAE,CAAC,WAAD,CAJjB;AAKIC,IAAAA,KAAK,EAAE,CACH;AACIC,MAAAA,IAAI,EAAE,UADV;AAEIC,MAAAA,IAAI,EAAE,QAFV;AAGIH,MAAAA,WAAW,EAAE,CACT;AACII,QAAAA,SAAS,EAAE,UADf;AAEIC,QAAAA,UAAU,EAAGC,CAAD,IAAOA;AAFvB,OADS,EAKT;AACIF,QAAAA,SAAS,EAAE,eADf;AAEIC,QAAAA,UAAU,EAAGC,CAAD,IAAOA,CAAC,GAAG;AAF3B,OALS,EAST;AACIF,QAAAA,SAAS,EAAE,YADf;AAEIC,QAAAA,UAAU,EAAGC,CAAD,IAAOA,CAAC,GAAG;AAF3B,OATS,EAaT;AACIF,QAAAA,SAAS,EAAE,iBADf;AAEIC,QAAAA,UAAU,EAAGC,CAAD,IAAOA,CAAC,GAAG;AAF3B,OAbS;AAHjB,KADG;AALX,GAD+B,CAAD,CAAlC;;AAqCA,QAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,IAAlB,KAA2B;AACvCd,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEa,MAAAA,KAAF;AAASC,MAAAA,QAAT;AAAmBC,MAAAA,IAAnB;AAAyBC,MAAAA,EAAE,EAAEpB,IAAI;AAAjC,KAAX,CAAD,CAAR;AACH,GAFD;;AAGA,QAAMqB,UAAU,GAAID,EAAD,IAAQ;AACvBf,IAAAA,QAAQ,CAACD,KAAK,CAACkB,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACH,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACH,GAFD;;AAIA,SACI,oBAAC,IAAD,CAAM,QAAN;AAAe,IAAA,KAAK,EAAE;AAAEhB,MAAAA,KAAF;AAASY,MAAAA,OAAT;AAAkBK,MAAAA;AAAlB,KAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKlB,KAAK,CAACqB,QADX,CADJ;AAKH,CAnDD;;AAqDA,eAAetB,mBAAf","sourcesContent":["\nimport React, { createContext, useState } from 'react';\nimport uuid from 'uuid/v1';\n\nexport const UnitContext = createContext();\n\nconst UnitContextProvider = (props) => {\n\n    const [Units, setUnits] = useState([\n        {\n            selectedOutputType: \"teaspoon\",\n            selectedInputType: \"teaspoon\",\n            inputValue: \"\",\n            conversions: [\"Brazilian\"],\n            units: [\n                {\n                    name: \"teaspoon\",\n                    type: \"liquid\",\n                    conversions: [\n                        {\n                            inputType: \"teaspoon\",\n                            conversion: (x) => x\n                        },\n                        {\n                            inputType: \"dessert spoon\",\n                            conversion: (x) => x / 12\n                        },\n                        {\n                            inputType: \"soup spoon\",\n                            conversion: (x) => x * 3\n                        },\n                        {\n                            inputType: \"cup (Brazilian)\",\n                            conversion: (x) => x / 30.54\n                        },\n                        \n\n                    ]\n                },\n                \n\n            ]\n        }\n    ]);\n\n    const addUnit = (title, director, year) => {\n        setUnits([...Units, { title, director, year, id: uuid() }]);\n    };\n    const removeUnit = (id) => {\n        setUnits(Units.filter(Unit => Unit.id !== id));\n    }\n\n    return (\n        <Unit.Provider value={{ Units, addUnit, removeUnit }}>\n            {props.children}\n        </Unit.Provider>\n    );\n}\n\nexport default UnitContextProvider;\n\n"]},"metadata":{},"sourceType":"module"}