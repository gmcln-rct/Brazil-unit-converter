{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { LanguageContext } from \"../contexts/LanguageContext\";\n\nconst UnitSelect = () => {\n  const {\n    language,\n    setLanguage\n  } = useContext(LanguageContext); // const [fromUnit, toUnit] = useState('');\n  // let chooseTheme = function() {\n  //     return '';\n  // }\n\n  const [convertedVal, setConvertedVal] = useState(1);\n  const [fromUnit, setFromUnit] = useState(0);\n  const [toUnit, setToUnit] = useState(0);\n  const [fromUnits, setfromUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    value: \"tea-bz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    value: \"dessert-bz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    value: \"soup-bz\",\n    conversion: 15\n  } // { label: \"Teacup (BZ)\", value: \"cup-tea-bz\" },\n  // { label: \"Cup (BZ)\", value: \"cup-bz\" },\n  // { label: \"Teaspoon (US)\", value: \"tea-us\" },\n  // { label: \"Tablespoon (US)\", value: \"table-us\" },\n  // { label: \"Cup (US)\", value: \"cup-us\" },\n  ]);\n  const [toUnits, setToUnits] = useState([{\n    label: \"Milliliter\",\n    value: \"mil\",\n    conversion: 1\n  }, {\n    label: \"Cup (US)\",\n    value: \"cup-us\",\n    conversion: 250\n  }]);\n  useEffect(() => {\n    setConvertedVal(fromUnit / toUnit);\n  }, [fromUnit, toUnit]); // const \n\n  function handleChange(e) {\n    // chooseTheme(e.target.value);\n    let idx = e.target.selectedIndex;\n    console.log(e.target.options[idx].value);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"Dogs and cats\");\n  }\n\n  ;\n\n  function handleSubmit(e) {\n    e.preventDefault();\n  }\n\n  ;\n  return React.createElement(\"div\", {\n    className: \"unit-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Enter Amount\", React.createElement(\"input\", {\n    type: \"number\",\n    name: \"amount\",\n    min: \"0\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  })), React.createElement(\"select\", {\n    className: \"select-from\",\n    value: fromUnit,\n    onChange: setFromUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, fromUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, label))), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, \" to \"), React.createElement(\"select\", {\n    className: \"select-to\",\n    value: toUnit,\n    onChange: setToUnit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, toUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, label))))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, convertedVal));\n};\n\nexport default UnitSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js"],"names":["React","useContext","useState","useEffect","LanguageContext","UnitSelect","language","setLanguage","convertedVal","setConvertedVal","fromUnit","setFromUnit","toUnit","setToUnit","fromUnits","setfromUnits","label","value","conversion","toUnits","setToUnits","handleChange","e","idx","target","selectedIndex","console","log","options","handleSubmit","preventDefault","map"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { LanguageContext } from \"../contexts/LanguageContext\";\n\nconst UnitSelect = () => {\n    const { language, setLanguage } = useContext(LanguageContext);\n\n    // const [fromUnit, toUnit] = useState('');\n    // let chooseTheme = function() {\n    //     return '';\n    // }\n\n    const [convertedVal, setConvertedVal] = useState(1);\n    const [fromUnit, setFromUnit] = useState(0);\n    const [toUnit, setToUnit] = useState(0);\n\n    const [fromUnits, setfromUnits] = useState([\n        { label: \"Teaspoon (BZ)\", value: \"tea-bz\", conversion: 5 },\n        { label: \"Dessert spoon (BZ)\", value: \"dessert-bz\", conversion: 10 },\n        { label: \"Soup spoon (BZ)\", value: \"soup-bz\", conversion: 15 },\n        // { label: \"Teacup (BZ)\", value: \"cup-tea-bz\" },\n        // { label: \"Cup (BZ)\", value: \"cup-bz\" },\n        // { label: \"Teaspoon (US)\", value: \"tea-us\" },\n        // { label: \"Tablespoon (US)\", value: \"table-us\" },\n        // { label: \"Cup (US)\", value: \"cup-us\" },\n    ]);\n\n    const [toUnits, setToUnits] = useState([\n        { label: \"Milliliter\", value: \"mil\", conversion: 1 },\n        { label: \"Cup (US)\", value: \"cup-us\", conversion: 250 },\n    ]);\n\n    useEffect(() => {\n        setConvertedVal(fromUnit / toUnit)\n    }, [fromUnit, toUnit]);\n\n    // const \n\n    function handleChange(e) {\n        // chooseTheme(e.target.value);\n        let idx = e.target.selectedIndex;\n\n        console.log(e.target.options[idx].value);\n        return (\n            <div>Dogs and cats</div>\n        )\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n    };\n\n\n    return (\n        <div className=\"unit-form\">\n            <form onSubmit={handleSubmit}>\n                <span>\n                <label>\n                    Enter Amount\n                    <input type=\"number\" name=\"amount\" min=\"0\"/>\n                </label>\n\n                <select\n                    className=\"select-from\"\n                    value={fromUnit}\n                    onChange={setFromUnit}\n                >\n\n                {fromUnits.map(({ label, value, conversion }) => (\n                    <option key={value} value={conversion}>\n                        {label}\n                    </option>\n                ))}\n\n                </select>\n\n                <span> to </span>\n\n\n                <select\n                    className=\"select-to\"\n                    value={toUnit}\n                    onChange={setToUnit}\n                >\n                    {toUnits.map(({ label, value, conversion }) => (\n                        <option key={value} value={value}>\n                            {label}\n                        </option>\n                    ))}\n\n                </select>\n                </span>\n            </form>\n            <p>{convertedVal}</p>\n        </div>\n    );\n};\n\n\nexport default UnitSelect;\n"]},"metadata":{},"sourceType":"module"}