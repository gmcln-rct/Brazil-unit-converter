{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js\";\n// import React, { useContext } from 'react';\n// import { languageOptions } from '../languages';\n// import { LanguageContext } from '../contexts/LanguageContext';\n// const LanguageSelect = () => {\n//     const languageContext = useContext(LanguageContext);\n//     const handleLanguageChange = (event) => {\n//         const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n//         // set selected language by calling context method\n//         languageContext.setLanguage(selectedLanguage);\n//     };\n//     return (\n//         <section className='language-select'>\n//             <h2>\n//                 Choose Language\n//             </h2>\n//             <select \n//                 onChange={handleLanguageChange}\n//                 value={languageContext.language.id}\n//             >\n//                 {languageOptions.map(item => (\n//                     <option\n//                         key={item.id}\n//                         value={item.id}\n//                     >\n//                         {item.text}\n//                     </option>\n//                 ))}\n//             </select>\n//         </section>\n//     );\n// };\n// export default LanguageSelect;\nimport React, { useContext } from 'react';\nimport { languageOptions } from '../languages'; // import { LanguageContext } from '../contexts/LanguageContext';\n\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\nconst LanguageSelect = () => {\n  const {\n    dictionary,\n    Text\n  } = useContext(LanguageContext);\n  const languageContext = useContext(LanguageContext);\n  let selectedLanguage = languageContext.language.id;\n\n  const handleLanguageChange = event => {\n    const selectedLanguage = languageOptions.find(item => item.id === event.target.value); // set selected language by calling context method\n\n    languageContext.setLanguage(selectedLanguage);\n  }; // const toggleLanguage = (event) => {\n  //     // const selectedLanguage = languageContext.language.id === 0? 1 : 0;\n  //     // const currLanguage = languageContext.language.id;\n  //     // const selectedLanguage = currLanguage === 'en'? 'pt' : 'en';\n  //     console.log(event.target.value==='en');\n  //     if (event.target.value === 'en') {\n  //          selectedLanguage = 'pt';\n  //     } else {\n  //          selectedLanguage = 'en';\n  //     }\n  //     console.log(selectedLanguage);\n  //     // const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n  //     // set selected language by calling context method\n  //     languageContext.setLanguage(selectedLanguage);\n  // };\n\n\n  return React.createElement(\"section\", {\n    className: \"language-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Text, {\n    tid: \"chooseLang\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  })), React.createElement(\"select\", {\n    onChange: handleLanguageChange,\n    value: languageContext.language.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, languageOptions.map(item => React.createElement(\"option\", {\n    key: item.id,\n    value: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, item.text))));\n};\n\nexport default LanguageSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js"],"names":["React","useContext","languageOptions","LanguageContext","Text","LanguageSelect","dictionary","languageContext","selectedLanguage","language","id","handleLanguageChange","event","find","item","target","value","setLanguage","map","text"],"mappings":";AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAGA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,eAAT,QAAgC,cAAhC,C,CAEA;;AAEA,SAASC,eAAT,EAA0BC,IAA1B,QAAsC,6BAAtC;;AAGA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM;AAAEC,IAAAA,UAAF;AAAcF,IAAAA;AAAd,MAAuBH,UAAU,CAACE,eAAD,CAAvC;AAEA,QAAMI,eAAe,GAAGN,UAAU,CAACE,eAAD,CAAlC;AACA,MAAIK,gBAAgB,GAAGD,eAAe,CAACE,QAAhB,CAAyBC,EAAhD;;AAEA,QAAMC,oBAAoB,GAAIC,KAAD,IAAW;AACpC,UAAMJ,gBAAgB,GAAGN,eAAe,CAACW,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACJ,EAAL,KAAYE,KAAK,CAACG,MAAN,CAAaC,KAAtD,CAAzB,CADoC,CAEpC;;AACAT,IAAAA,eAAe,CAACU,WAAhB,CAA4BT,gBAA5B;AACH,GAJD,CANyB,CAazB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,SACI;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAoBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAC,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CApBJ,EAuBI;AACI,IAAA,QAAQ,EAAEG,oBADd;AAEI,IAAA,KAAK,EAAEJ,eAAe,CAACE,QAAhB,CAAyBC,EAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKR,eAAe,CAACgB,GAAhB,CAAoBJ,IAAI,IACrB;AACI,IAAA,GAAG,EAAEA,IAAI,CAACJ,EADd;AAEI,IAAA,KAAK,EAAEI,IAAI,CAACJ,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKI,IAAI,CAACK,IAJV,CADH,CAJL,CAvBJ,CADJ;AA0CH,CAxED;;AA2EA,eAAed,cAAf","sourcesContent":["\n// import React, { useContext } from 'react';\n\n// import { languageOptions } from '../languages';\n\n// import { LanguageContext } from '../contexts/LanguageContext';\n\n// const LanguageSelect = () => {\n//     const languageContext = useContext(LanguageContext);\n\n//     const handleLanguageChange = (event) => {\n//         const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n//         // set selected language by calling context method\n//         languageContext.setLanguage(selectedLanguage);\n//     };\n\n//     return (\n//         <section className='language-select'>\n//             <h2>\n//                 Choose Language\n//             </h2>\n//             <select \n//                 onChange={handleLanguageChange}\n//                 value={languageContext.language.id}\n//             >\n//                 {languageOptions.map(item => (\n//                     <option\n//                         key={item.id}\n//                         value={item.id}\n//                     >\n//                         {item.text}\n//                     </option>\n//                 ))}\n//             </select>\n\n\n//         </section>\n\n//     );\n// };\n\n\n\n// export default LanguageSelect;\n\n\nimport React, { useContext } from 'react';\n\nimport { languageOptions } from '../languages';\n\n// import { LanguageContext } from '../contexts/LanguageContext';\n\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\n\nconst LanguageSelect = () => {\n    const { dictionary, Text } = useContext(LanguageContext);\n\n    const languageContext = useContext(LanguageContext);\n    let selectedLanguage = languageContext.language.id;\n\n    const handleLanguageChange = (event) => {\n        const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n        // set selected language by calling context method\n        languageContext.setLanguage(selectedLanguage);\n    };\n\n\n    // const toggleLanguage = (event) => {\n    //     // const selectedLanguage = languageContext.language.id === 0? 1 : 0;\n    //     // const currLanguage = languageContext.language.id;\n    //     // const selectedLanguage = currLanguage === 'en'? 'pt' : 'en';\n    //     console.log(event.target.value==='en');\n    //     if (event.target.value === 'en') {\n    //          selectedLanguage = 'pt';\n    //     } else {\n    //          selectedLanguage = 'en';\n    //     }\n    //     console.log(selectedLanguage);\n    //     // const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n    //     // set selected language by calling context method\n    //     languageContext.setLanguage(selectedLanguage);\n    // };\n\n\n    return (\n        <section className='language-select'>\n            {/* <h2>\n                Choose Language\n            </h2>\n            <input\n                // checked={isOn}\n                onChange={toggleLanguage}\n                className=\"react-switch-checkbox\"\n                id={selectedLanguage}\n                type=\"checkbox\"\n                value={selectedLanguage}\n            />\n            <label\n                className=\"react-switch-label\"\n                htmlFor={selectedLanguage}\n                \n            >\n                <span className={`react-switch-button`} />\n            </label> */}\n\n            <h2>\n                <Text tid=\"chooseLang\" />\n            </h2>\n            <select\n                onChange={handleLanguageChange}\n                value={languageContext.language.id}\n            >\n                {languageOptions.map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                    >\n                        {item.text}\n                    </option>\n                ))}\n            </select>\n\n\n        </section>\n\n    );\n};\n\n\nexport default LanguageSelect;"]},"metadata":{},"sourceType":"module"}