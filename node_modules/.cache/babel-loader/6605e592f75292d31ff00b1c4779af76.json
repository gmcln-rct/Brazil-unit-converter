{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js\";\n// import React, { useContext } from 'react';\n// import { languageOptions } from '../languages';\n// import { LanguageContext } from '../contexts/LanguageContext';\n// const LanguageSelect = () => {\n//     const languageContext = useContext(LanguageContext);\n//     const handleLanguageChange = (event) => {\n//         const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n//         // set selected language by calling context method\n//         languageContext.setLanguage(selectedLanguage);\n//     };\n//     return (\n//         <section className='language-select'>\n//             <h2>\n//                 Choose Language\n//             </h2>\n//             <select \n//                 onChange={handleLanguageChange}\n//                 value={languageContext.language.id}\n//             >\n//                 {languageOptions.map(item => (\n//                     <option\n//                         key={item.id}\n//                         value={item.id}\n//                     >\n//                         {item.text}\n//                     </option>\n//                 ))}\n//             </select>\n//         </section>\n//     );\n// };\n// export default LanguageSelect;\nimport React, { useContext, useState } from 'react';\nimport { languageOptions } from '../languages';\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst LanguageSelect = () => {\n  const [languageId, setLanguageId] = useState(\"en\");\n\n  function toggle() {\n    setToggleState(toggleState === \"en\" ? \"pt\" : \"en\");\n  }\n\n  return React.createElement(\"div\", {\n    className: `switch ${toggleState}`,\n    onClick: toggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  });\n  const languageContext = useContext(LanguageContext);\n\n  const handleLanguageChange = event => {\n    const selectedLanguage = languageOptions.find(item => item.id === event.target.value); // set selected language by calling context method\n\n    languageContext.setLanguage(selectedLanguage);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"language-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Choose Language\"), React.createElement(\"select\", {\n    onChange: handleLanguageChange,\n    value: languageContext.language.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, languageOptions.map(item => React.createElement(\"option\", {\n    key: item.id,\n    value: item.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, item.text))));\n};\n\nexport default LanguageSelect; // export default function Toggle(props) {\n//     const [toggleState, setToggleState] = useState(\"off\");\n//     function toggle() {\n//         setToggleState(toggleState === \"off\" ? \"on\" : \"off\");\n//     }\n//     return <div className={`switch ${toggleState}`} onClick={toggle} />;\n// }","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js"],"names":["React","useContext","useState","languageOptions","LanguageContext","LanguageSelect","languageId","setLanguageId","toggle","setToggleState","toggleState","languageContext","handleLanguageChange","event","selectedLanguage","find","item","id","target","value","setLanguage","language","map","text"],"mappings":";AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAEA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AAEA,SAASC,eAAT,QAAgC,cAAhC;AAEA,SAASC,eAAT,QAAgC,6BAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BL,QAAQ,CAAC,IAAD,CAA5C;;AAEA,WAASM,MAAT,GAAkB;AACdC,IAAAA,cAAc,CAACC,WAAW,KAAK,IAAhB,GAAuB,IAAvB,GAA8B,IAA/B,CAAd;AACH;;AAED,SAAO;AAAK,IAAA,SAAS,EAAG,UAASA,WAAY,EAAtC;AAAyC,IAAA,OAAO,EAAEF,MAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACA,QAAMG,eAAe,GAAGV,UAAU,CAACG,eAAD,CAAlC;;AAEA,QAAMQ,oBAAoB,GAAIC,KAAD,IAAW;AACpC,UAAMC,gBAAgB,GAAGX,eAAe,CAACY,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,KAAK,CAACK,MAAN,CAAaC,KAAtD,CAAzB,CADoC,CAEpC;;AACAR,IAAAA,eAAe,CAACS,WAAhB,CAA4BN,gBAA5B;AACH,GAJD;;AAMA,SACI;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII;AACI,IAAA,QAAQ,EAAEF,oBADd;AAEI,IAAA,KAAK,EAAED,eAAe,CAACU,QAAhB,CAAyBJ,EAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKd,eAAe,CAACmB,GAAhB,CAAoBN,IAAI,IACrB;AACI,IAAA,GAAG,EAAEA,IAAI,CAACC,EADd;AAEI,IAAA,KAAK,EAAED,IAAI,CAACC,EAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAIKD,IAAI,CAACO,IAJV,CADH,CAJL,CAJJ,CADJ;AAuBH,CAvCD;;AA2CA,eAAelB,cAAf,C,CAIA;AACA;AAEA;AACA;AACA;AAEA;AACA","sourcesContent":["\n// import React, { useContext } from 'react';\n\n// import { languageOptions } from '../languages';\n\n// import { LanguageContext } from '../contexts/LanguageContext';\n\n// const LanguageSelect = () => {\n//     const languageContext = useContext(LanguageContext);\n\n//     const handleLanguageChange = (event) => {\n//         const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n//         // set selected language by calling context method\n//         languageContext.setLanguage(selectedLanguage);\n//     };\n\n//     return (\n//         <section className='language-select'>\n//             <h2>\n//                 Choose Language\n//             </h2>\n//             <select \n//                 onChange={handleLanguageChange}\n//                 value={languageContext.language.id}\n//             >\n//                 {languageOptions.map(item => (\n//                     <option\n//                         key={item.id}\n//                         value={item.id}\n//                     >\n//                         {item.text}\n//                     </option>\n//                 ))}\n//             </select>\n\n\n//         </section>\n\n//     );\n// };\n\n\n\n// export default LanguageSelect;\n\nimport React, { useContext, useState } from 'react';\n\nimport { languageOptions } from '../languages';\n\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst LanguageSelect = () => {\n    const [languageId, setLanguageId] = useState(\"en\");\n\n    function toggle() {\n        setToggleState(toggleState === \"en\" ? \"pt\" : \"en\");\n    }\n\n    return <div className={`switch ${toggleState}`} onClick={toggle} />;\n    const languageContext = useContext(LanguageContext);\n\n    const handleLanguageChange = (event) => {\n        const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n        // set selected language by calling context method\n        languageContext.setLanguage(selectedLanguage);\n    };\n\n    return (\n        <section className='language-select'>\n            <h2>\n                Choose Language\n            </h2>\n            <select\n                onChange={handleLanguageChange}\n                value={languageContext.language.id}\n            >\n                {languageOptions.map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                    >\n                        {item.text}\n                    </option>\n                ))}\n            </select>\n\n\n        </section>\n\n    );\n};\n\n\n\nexport default LanguageSelect;\n\n\n\n// export default function Toggle(props) {\n//     const [toggleState, setToggleState] = useState(\"off\");\n\n//     function toggle() {\n//         setToggleState(toggleState === \"off\" ? \"on\" : \"off\");\n//     }\n\n//     return <div className={`switch ${toggleState}`} onClick={toggle} />;\n// }\n\n"]},"metadata":{},"sourceType":"module"}