{"ast":null,"code":"import _slicedToArray from\"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useContext,useState,useEffect}from\"react\";import{LanguageContext,Text}from\"../contexts/LanguageContext\";var UnitSelect=function UnitSelect(){// const { dictionary, setLanguage } = useContext(LanguageContext);\nvar _useState=useState(1),_useState2=_slicedToArray(_useState,2),convertedVal=_useState2[0],setConvertedVal=_useState2[1];var _useState3=useState(1),_useState4=_slicedToArray(_useState3,2),amount=_useState4[0],setAmount=_useState4[1];var _useState5=useState(5),_useState6=_slicedToArray(_useState5,2),fromUnit=_useState6[0],setFromUnit=_useState6[1];var _useState7=useState(1),_useState8=_slicedToArray(_useState7,2),toUnit=_useState8[0],setToUnit=_useState8[1];var _useState9=useState([{label:\"Teaspoon (BZ)\",value:\"teabz\",conversion:5},{label:\"Dessert spoon (BZ)\",value:\"dspbz\",conversion:10},{label:\"Soup spoon (BZ)\",value:\"sspbz\",conversion:15},{label:\"Teacup (BZ)\",value:\"teacupbz\",conversion:250},{label:\"Cup (BZ)\",value:\"cupbz\",conversion:240},{label:\"Teaspoon (US)\",value:\"tspus\",conversion:4.92},{label:\"Tablespoon (US)\",value:\"tbspus\",conversion:14.79},{label:\"Cup (US)\",value:\"cupus\",conversion:240.001},{label:\"Milliliter\",value:\"ml\",conversion:1}]),_useState10=_slicedToArray(_useState9,2),fromUnits=_useState10[0],setfromUnits=_useState10[1];var _useState11=useState([{label:\"Teaspoon (BZ)\",value:\"teabz\",conversion:5},{label:\"Dessert spoon (BZ)\",value:\"dspbz\",conversion:10},{label:\"Soup spoon (BZ)\",value:\"sspbz\",conversion:15},{label:\"Teacup (BZ)\",value:\"teacupbz\",conversion:250},{label:\"Cup (BZ)\",value:\"cupbz\",conversion:240},{label:\"Teaspoon (US)\",value:\"tspus\",conversion:4.92},{label:\"Tablespoon (US)\",value:\"tbspus\",conversion:14.79},{label:\"Cup (US)\",value:\"cupus\",conversion:240.001},{label:\"Milliliter\",value:\"ml\",conversion:1}]),_useState12=_slicedToArray(_useState11,2),toUnits=_useState12[0],setToUnits=_useState12[1];useEffect(function(){setConvertedVal(amount*fromUnit/toUnit);},[amount,fromUnit,toUnit]);return React.createElement(\"main\",{className:\"unit-form\"},React.createElement(\"section\",{className:\"amount-span\"},React.createElement(\"h2\",null,\"Enter Amount To Convert\"),React.createElement(\"input\",{id:\"amount\",label:\"Amount\",name:\"tsp-bz\",type:\"number\",autoFocus:true,value:amount,onChange:function onChange(event){return setAmount(event.target.value);}})),React.createElement(\"section\",null,React.createElement(\"select\",{className:\"select-from\",value:fromUnit,onChange:function onChange(event){return setFromUnit(event.target.value);}},fromUnits.map(function(_ref){var label=_ref.label,value=_ref.value,conversion=_ref.conversion;return React.createElement(\"option\",{key:value,value:conversion},label);})),React.createElement(\"div\",null,\" to \"),React.createElement(\"select\",{className:\"select-to\",value:toUnit,onChange:function onChange(event){return setToUnit(event.target.value);}},toUnits.map(function(_ref2){var label=_ref2.label,value=_ref2.value,conversion=_ref2.conversion;return React.createElement(\"option\",{key:value,value:conversion},label);}))),React.createElement(\"section\",null,React.createElement(\"h2\",null,\"Conversion:\"),React.createElement(\"span\",{className:\"converted-val\"},Number.isInteger(convertedVal)?convertedVal:convertedVal.toFixed(2))));};export default UnitSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js"],"names":["React","useContext","useState","useEffect","LanguageContext","Text","UnitSelect","convertedVal","setConvertedVal","amount","setAmount","fromUnit","setFromUnit","toUnit","setToUnit","label","value","conversion","fromUnits","setfromUnits","toUnits","setToUnits","event","target","map","Number","isInteger","toFixed"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\n\nconst UnitSelect = () => {\n    // const { dictionary, setLanguage } = useContext(LanguageContext);\n\n    const [convertedVal, setConvertedVal] = useState(1);\n    const [amount, setAmount] = useState(1);\n    const [fromUnit, setFromUnit] = useState(5);\n    const [toUnit, setToUnit] = useState(1);\n\n    const [fromUnits, setfromUnits] = useState([\n      { label: \"Teaspoon (BZ)\", value: \"teabz\", conversion: 5 },\n      { label: \"Dessert spoon (BZ)\", value: \"dspbz\", conversion: 10 },\n      { label: \"Soup spoon (BZ)\", value: \"sspbz\", conversion: 15 },\n      { label: \"Teacup (BZ)\", value: \"teacupbz\", conversion: 250 },\n      { label: \"Cup (BZ)\", value: \"cupbz\", conversion: 240 },\n      { label: \"Teaspoon (US)\", value: \"tspus\", conversion: 4.92 },\n      { label: \"Tablespoon (US)\", value: \"tbspus\", conversion: 14.79 },\n      { label: \"Cup (US)\", value: \"cupus\", conversion: 240.001 },\n      { label: \"Milliliter\", value: \"ml\", conversion: 1 }\n    ]);\n\n    const [toUnits, setToUnits] = useState([\n      { label: \"Teaspoon (BZ)\", value: \"teabz\", conversion: 5 },\n      { label: \"Dessert spoon (BZ)\", value: \"dspbz\", conversion: 10 },\n      { label: \"Soup spoon (BZ)\", value: \"sspbz\", conversion: 15 },\n      { label: \"Teacup (BZ)\", value: \"teacupbz\", conversion: 250 },\n      { label: \"Cup (BZ)\", value: \"cupbz\", conversion: 240 },\n      { label: \"Teaspoon (US)\", value: \"tspus\", conversion: 4.92 },\n      { label: \"Tablespoon (US)\", value: \"tbspus\", conversion: 14.79 },\n      { label: \"Cup (US)\", value: \"cupus\", conversion: 240.001 },\n      { label: \"Milliliter\", value: \"ml\", conversion: 1 }\n    ]);\n\n    useEffect(() => {\n        setConvertedVal(amount *fromUnit / toUnit)\n    }, [amount,fromUnit, toUnit]);\n\n\n\n    return (\n        <main className=\"unit-form\">\n\n                    <section className='amount-span'>\n                        <h2>Enter Amount To Convert</h2>\n                    <input\n                        id=\"amount\"\n                        label=\"Amount\"\n                        name=\"tsp-bz\"\n                        type='number'\n\n                        autoFocus\n                        value={amount}\n                        onChange={event => setAmount(event.target.value)}\n                    />\n\n\n                    </section>\n                    <section>\n                        <select\n                            className=\"select-from\"\n                            value={fromUnit}\n                            onChange={event => setFromUnit(event.target.value)}\n                        >\n\n                        {fromUnits.map(({ label, value, conversion }) => (\n                            <option key={value} value={conversion}>\n                                {label}\n                                {/* <Text tid=\"value\" /> */}\n                                {/* {Text.tid} */}\n                            </option>\n                        ))}\n\n                        </select>\n\n                        <div> to </div>\n\n\n                        <select\n                            className=\"select-to\"\n                            value={toUnit}\n                            onChange={event => setToUnit(event.target.value)}\n                        >\n                            {toUnits.map(({ label, value, conversion }) => (\n                                <option key={value} value={conversion}>\n                                    {label}\n                                </option>\n                            ))}\n\n                        </select>\n\n                    </section>\n                    <section>\n                        <h2>\n                            Conversion: \n                        </h2>\n                        <span className='converted-val'>{(Number.isInteger(convertedVal) ? convertedVal: convertedVal.toFixed(2))}</span>\n                    </section>\n\n        </main>\n    );\n};\n\n\nexport default UnitSelect;\n"]},"metadata":{},"sourceType":"module"}