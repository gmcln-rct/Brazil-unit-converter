{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/contexts/LanguageContext.js\";\nimport React, { createContext, useState } from 'react';\nimport { languageOptions, dictionaryList } from '../languages'; // create the language context with default selected language\n\nexport const LanguageContext = createContext({\n  language: languageOptions[0],\n  dictionary: dictionaryList[languageOptions[0].id]\n});\n\nconst LanguageContextProvider = props => {\n  const languageContext = useContext(LanguageContext);\n  const [language, setLanguage] = useState(languageContext.language);\n  const [dictionary, setDictionary] = useState(languageContext.dictionary);\n  const provider = {\n    language,\n    dictionary,\n    setLanguage: selectedLanguage => {\n      setLanguage(selectedLanguage); // it will update the language in state\n\n      setDictionary(dictionaryList[selectedLanguage.id]);\n    }\n  };\n  return React.createElement(LanguageContext.Provider, {\n    value: {\n      Languages\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, props.children);\n};\n\nexport default LanguageContextProvider;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/contexts/LanguageContext.js"],"names":["React","createContext","useState","languageOptions","dictionaryList","LanguageContext","language","dictionary","id","LanguageContextProvider","props","languageContext","useContext","setLanguage","setDictionary","provider","selectedLanguage","Languages","children"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,cAAhD,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAGJ,aAAa,CAAC;AACzCK,EAAAA,QAAQ,EAAEH,eAAe,CAAC,CAAD,CADgB;AAEzCI,EAAAA,UAAU,EAAEH,cAAc,CAACD,eAAe,CAAC,CAAD,CAAf,CAAmBK,EAApB;AAFe,CAAD,CAArC;;AAKP,MAAMC,uBAAuB,GAAIC,KAAD,IAAW;AAEvC,QAAMC,eAAe,GAAGC,UAAU,CAACP,eAAD,CAAlC;AACA,QAAM,CAACC,QAAD,EAAWO,WAAX,IAA0BX,QAAQ,CAACS,eAAe,CAACL,QAAjB,CAAxC;AACA,QAAM,CAACC,UAAD,EAAaO,aAAb,IAA8BZ,QAAQ,CAACS,eAAe,CAACJ,UAAjB,CAA5C;AAEA,QAAMQ,QAAQ,GAAG;AACbT,IAAAA,QADa;AAEbC,IAAAA,UAFa;AAGbM,IAAAA,WAAW,EAAGG,gBAAD,IAAsB;AAC/BH,MAAAA,WAAW,CAACG,gBAAD,CAAX,CAD+B,CACA;;AAC/BF,MAAAA,aAAa,CAACV,cAAc,CAACY,gBAAgB,CAACR,EAAlB,CAAf,CAAb;AACH;AANY,GAAjB;AAUA,SACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAAES,MAAAA;AAAF,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKP,KAAK,CAACQ,QADX,CADJ;AAKH,CArBD;;AAuBA,eAAeT,uBAAf","sourcesContent":["\nimport React, { createContext, useState } from 'react';\nimport { languageOptions, dictionaryList } from '../languages';\n\n// create the language context with default selected language\nexport const LanguageContext = createContext({\n    language: languageOptions[0],\n    dictionary: dictionaryList[languageOptions[0].id]\n});\n\nconst LanguageContextProvider = (props) => {\n\n    const languageContext = useContext(LanguageContext);\n    const [language, setLanguage] = useState(languageContext.language);\n    const [dictionary, setDictionary] = useState(languageContext.dictionary);\n\n    const provider = {\n        language,\n        dictionary,\n        setLanguage: (selectedLanguage) => {\n            setLanguage(selectedLanguage); // it will update the language in state\n            setDictionary(dictionaryList[selectedLanguage.id]);\n        }\n    };\n\n\n    return (\n        <LanguageContext.Provider value={{ Languages }}>\n            {props.children}\n        </LanguageContext.Provider>\n    );\n}\n\nexport default LanguageContextProvider;\n\n"]},"metadata":{},"sourceType":"module"}