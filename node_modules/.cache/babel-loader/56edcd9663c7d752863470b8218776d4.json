{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js\";\n// import React, { useContext } from 'react';\n// import { languageOptions } from '../languages';\n// import { LanguageContext } from '../contexts/LanguageContext';\n// const LanguageSelect = () => {\n//     const languageContext = useContext(LanguageContext);\n//     const handleLanguageChange = (event) => {\n//         const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n//         // set selected language by calling context method\n//         languageContext.setLanguage(selectedLanguage);\n//     };\n//     return (\n//         <section className='language-select'>\n//             <h2>\n//                 Choose Language\n//             </h2>\n//             <select \n//                 onChange={handleLanguageChange}\n//                 value={languageContext.language.id}\n//             >\n//                 {languageOptions.map(item => (\n//                     <option\n//                         key={item.id}\n//                         value={item.id}\n//                     >\n//                         {item.text}\n//                     </option>\n//                 ))}\n//             </select>\n//         </section>\n//     );\n// };\n// export default LanguageSelect;\nimport React, { useContext } from 'react';\nimport { languageOptions } from '../languages';\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst LanguageSelect = () => {\n  const languageContext = useContext(LanguageContext); // const handleLanguageChange = (event) => {\n  //     const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n  //     // set selected language by calling context method\n  //     languageContext.setLanguage(selectedLanguage);\n  // };\n\n  const handleLanguageChange = event => {\n    const selectedLanguage = languageContetxt.language.id === 0 ? 1 : 0; // const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n    // set selected language by calling context method\n\n    languageContext.setLanguage(selectedLanguage);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"language-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Choose Language\"), React.createElement(\"input\", {\n    // checked={isOn}\n    onChange: handleLanguageChange,\n    className: \"react-switch-checkbox\",\n    id: languageContext.language.id,\n    type: \"checkbox\",\n    value: languageContext.language.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"react-switch-label\",\n    htmlFor: languageContext.language.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: `react-switch-button`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  })));\n};\n\nexport default LanguageSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js"],"names":["React","useContext","languageOptions","LanguageContext","LanguageSelect","languageContext","handleLanguageChange","event","selectedLanguage","languageContetxt","language","id","setLanguage"],"mappings":";AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAEA;AACA;AAIA;AAGA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,eAAT,QAAgC,cAAhC;AAEA,SAASC,eAAT,QAAgC,6BAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,eAAe,GAAGJ,UAAU,CAACE,eAAD,CAAlC,CADyB,CAGzB;AACA;AACA;AACA;AACA;;AAEA,QAAMG,oBAAoB,GAAIC,KAAD,IAAW;AACpC,UAAMC,gBAAgB,GAAGC,gBAAgB,CAACC,QAAjB,CAA0BC,EAA1B,KAAiC,CAAjC,GAAoC,CAApC,GAAwC,CAAjE,CADoC,CAEpC;AACA;;AACAN,IAAAA,eAAe,CAACO,WAAhB,CAA4BJ,gBAA5B;AACH,GALD;;AAQA,SACI;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAII;AACI;AACA,IAAA,QAAQ,EAAEF,oBAFd;AAGI,IAAA,SAAS,EAAC,uBAHd;AAII,IAAA,EAAE,EAAED,eAAe,CAACK,QAAhB,CAAyBC,EAJjC;AAKI,IAAA,IAAI,EAAC,UALT;AAMI,IAAA,KAAK,EAAEN,eAAe,CAACK,QAAhB,CAAyBC,EANpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAYI;AACI,IAAA,SAAS,EAAC,oBADd;AAEI,IAAA,OAAO,EAAEN,eAAe,CAACK,QAAhB,CAAyBC,EAFtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AAAM,IAAA,SAAS,EAAG,qBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAZJ,CADJ;AAyCH,CA1DD;;AA6DA,eAAeP,cAAf","sourcesContent":["\n// import React, { useContext } from 'react';\n\n// import { languageOptions } from '../languages';\n\n// import { LanguageContext } from '../contexts/LanguageContext';\n\n// const LanguageSelect = () => {\n//     const languageContext = useContext(LanguageContext);\n\n//     const handleLanguageChange = (event) => {\n//         const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n//         // set selected language by calling context method\n//         languageContext.setLanguage(selectedLanguage);\n//     };\n\n//     return (\n//         <section className='language-select'>\n//             <h2>\n//                 Choose Language\n//             </h2>\n//             <select \n//                 onChange={handleLanguageChange}\n//                 value={languageContext.language.id}\n//             >\n//                 {languageOptions.map(item => (\n//                     <option\n//                         key={item.id}\n//                         value={item.id}\n//                     >\n//                         {item.text}\n//                     </option>\n//                 ))}\n//             </select>\n\n\n//         </section>\n\n//     );\n// };\n\n\n\n// export default LanguageSelect;\n\n\nimport React, { useContext } from 'react';\n\nimport { languageOptions } from '../languages';\n\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst LanguageSelect = () => {\n    const languageContext = useContext(LanguageContext);\n\n    // const handleLanguageChange = (event) => {\n    //     const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n    //     // set selected language by calling context method\n    //     languageContext.setLanguage(selectedLanguage);\n    // };\n\n    const handleLanguageChange = (event) => {\n        const selectedLanguage = languageContetxt.language.id === 0? 1 : 0;\n        // const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n        // set selected language by calling context method\n        languageContext.setLanguage(selectedLanguage);\n    };\n\n\n    return (\n        <section className='language-select'>\n            <h2>\n                Choose Language\n            </h2>\n            <input\n                // checked={isOn}\n                onChange={handleLanguageChange}\n                className=\"react-switch-checkbox\"\n                id={languageContext.language.id}\n                type=\"checkbox\"\n                value={languageContext.language.id}\n            />\n            <label\n                className=\"react-switch-label\"\n                htmlFor={languageContext.language.id}\n            >\n                <span className={`react-switch-button`} />\n            </label>\n\n            {/* <h2>\n                Choose Language\n            </h2>\n            <select\n                onChange={handleLanguageChange}\n                value={languageContext.language.id}\n            >\n                {languageOptions.map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                    >\n                        {item.text}\n                    </option>\n                ))}\n            </select> */}\n\n\n        </section>\n\n    );\n};\n\n\nexport default LanguageSelect;"]},"metadata":{},"sourceType":"module"}