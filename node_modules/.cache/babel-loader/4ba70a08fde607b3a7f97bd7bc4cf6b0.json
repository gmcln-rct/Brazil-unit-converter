{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\nconst UnitSelect = () => {\n  // const { dictionary, setLanguage } = useContext(LanguageContext);\n  const [convertedVal, setConvertedVal] = useState(1);\n  const [amount, setAmount] = useState(1);\n  const [fromUnit, setFromUnit] = useState(5);\n  const [toUnit, setToUnit] = useState(1);\n  const [fromUnits, setfromUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    value: \"teabz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    value: \"dspbz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    value: \"sspbz\",\n    conversion: 15\n  }, {\n    label: \"Teacup (BZ)\",\n    value: \"teacupbz\",\n    conversion: 250\n  }, {\n    label: \"Cup (BZ)\",\n    value: \"cupbz\",\n    conversion: 240\n  }, {\n    label: \"Teaspoon (US)\",\n    value: \"tspus\",\n    conversion: 4.92\n  }, {\n    label: \"Tablespoon (US)\",\n    value: \"tbspus\",\n    conversion: 14.79\n  }, {\n    label: \"Cup (US)\",\n    value: \"cupus\",\n    conversion: 240.001\n  }, {\n    label: \"Milliliter\",\n    value: \"ml\",\n    conversion: 1\n  }]);\n  const [toUnits, setToUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    value: \"teabz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    value: \"dspbz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    value: \"sspbz\",\n    conversion: 15\n  }, {\n    label: \"Teacup (BZ)\",\n    value: \"teacupbz\",\n    conversion: 250\n  }, {\n    label: \"Cup (BZ)\",\n    value: \"cupbz\",\n    conversion: 240\n  }, {\n    label: \"Teaspoon (US)\",\n    value: \"tspus\",\n    conversion: 4.92\n  }, {\n    label: \"Tablespoon (US)\",\n    value: \"tbspus\",\n    conversion: 14.79\n  }, {\n    label: \"Cup (US)\",\n    value: \"cupus\",\n    conversion: 240.001\n  }, {\n    label: \"Milliliter\",\n    value: \"ml\",\n    conversion: 1\n  }]);\n  useEffect(() => {\n    setConvertedVal(amount * fromUnit / toUnit);\n  }, [amount, fromUnit, toUnit]);\n  return React.createElement(\"main\", {\n    className: \"unit-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    className: \"amount-span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Enter Amount To Convert\"), React.createElement(\"input\", {\n    id: \"amount\",\n    label: \"Amount\",\n    name: \"tsp-bz\",\n    type: \"number\",\n    autoFocus: true,\n    value: amount,\n    onChange: event => setAmount(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"select-from\",\n    value: fromUnit,\n    onChange: event => setFromUnit(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, fromUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, label))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" to \"), React.createElement(\"select\", {\n    className: \"select-to\",\n    value: toUnit,\n    onChange: event => setToUnit(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, toUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, label)))), React.createElement(\"section\", {\n    className: \"conversion-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, \"Conversion:\"), React.createElement(\"span\", {\n    className: \"converted-val\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, Number.isInteger(convertedVal) ? convertedVal : convertedVal.toFixed(2))));\n};\n\nexport default UnitSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js"],"names":["React","useContext","useState","useEffect","LanguageContext","Text","UnitSelect","convertedVal","setConvertedVal","amount","setAmount","fromUnit","setFromUnit","toUnit","setToUnit","fromUnits","setfromUnits","label","value","conversion","toUnits","setToUnits","event","target","map","Number","isInteger","toFixed"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\n\nconst UnitSelect = () => {\n    // const { dictionary, setLanguage } = useContext(LanguageContext);\n\n     const [convertedVal, setConvertedVal] = useState(1);\n    const [amount, setAmount] = useState(1);\n    const [fromUnit, setFromUnit] = useState(5);\n    const [toUnit, setToUnit] = useState(1);\n\n\n\n    \n    const [fromUnits, setfromUnits] = useState([\n      { label: \"Teaspoon (BZ)\", value: \"teabz\", conversion: 5 },\n      { label: \"Dessert spoon (BZ)\", value: \"dspbz\", conversion: 10 },\n      { label: \"Soup spoon (BZ)\", value: \"sspbz\", conversion: 15 },\n      { label: \"Teacup (BZ)\", value: \"teacupbz\", conversion: 250 },\n      { label: \"Cup (BZ)\", value: \"cupbz\", conversion: 240 },\n      { label: \"Teaspoon (US)\", value: \"tspus\", conversion: 4.92 },\n      { label: \"Tablespoon (US)\", value: \"tbspus\", conversion: 14.79 },\n      { label: \"Cup (US)\", value: \"cupus\", conversion: 240.001 },\n      { label: \"Milliliter\", value: \"ml\", conversion: 1 }\n    ]);\n\n    const [toUnits, setToUnits] = useState([\n      { label: \"Teaspoon (BZ)\", value: \"teabz\", conversion: 5 },\n      { label: \"Dessert spoon (BZ)\", value: \"dspbz\", conversion: 10 },\n      { label: \"Soup spoon (BZ)\", value: \"sspbz\", conversion: 15 },\n      { label: \"Teacup (BZ)\", value: \"teacupbz\", conversion: 250 },\n      { label: \"Cup (BZ)\", value: \"cupbz\", conversion: 240 },\n      { label: \"Teaspoon (US)\", value: \"tspus\", conversion: 4.92 },\n      { label: \"Tablespoon (US)\", value: \"tbspus\", conversion: 14.79 },\n      { label: \"Cup (US)\", value: \"cupus\", conversion: 240.001 },\n      { label: \"Milliliter\", value: \"ml\", conversion: 1 }\n    ]);\n\n    useEffect(() => {\n        setConvertedVal(amount *fromUnit / toUnit)\n    }, [amount,fromUnit, toUnit]);\n\n\n    return (\n        <main className=\"unit-form\">\n\n                    <section className='amount-span'>\n                        <h2>Enter Amount To Convert</h2>\n                    <input\n                        id=\"amount\"\n                        label=\"Amount\"\n                        name=\"tsp-bz\"\n                        type='number'\n\n                        autoFocus\n                        value={amount}\n                        onChange={event => setAmount(event.target.value)}\n                    />\n\n\n                    </section>\n                    <section>\n                        <select\n                            className=\"select-from\"\n                            value={fromUnit}\n                            onChange={event => setFromUnit(event.target.value)}\n                        >\n\n                        {fromUnits.map(({ label, value, conversion }) => (\n                            <option key={value} value={conversion}>\n                                {label}\n                                {/* <Text tid=\"value\" /> */}\n                                {/* {Text.tid} */}\n                            </option>\n                        ))}\n\n                        </select>\n\n                        <div> to </div>\n\n\n                        <select\n                            className=\"select-to\"\n                            value={toUnit}\n                            onChange={event => setToUnit(event.target.value)}\n                        >\n                            {toUnits.map(({ label, value, conversion }) => (\n                                <option key={value} value={conversion}>\n                                    {label}\n                                </option>\n                            ))}\n\n                        </select>\n\n                    </section>\n                    <section className='conversion-section'>\n                        <h2>\n                            Conversion: \n                        </h2>\n                        <span className='converted-val'>{(Number.isInteger(convertedVal) ? convertedVal: convertedVal.toFixed(2))}</span>\n                    </section>\n\n        </main>\n    );\n};\n\n\nexport default UnitSelect;\n"]},"metadata":{},"sourceType":"module"}