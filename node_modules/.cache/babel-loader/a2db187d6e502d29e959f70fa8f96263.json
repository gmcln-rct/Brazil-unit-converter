{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\nconst UnitSelect = () => {\n  // const { dictionary, setLanguage } = useContext(LanguageContext);\n  const [convertedVal, setConvertedVal] = useState(1);\n  const [amount, setAmount] = useState(1);\n  const [fromUnit, setFromUnit] = useState(5);\n  const [toUnit, setToUnit] = useState(1);\n  const [fromUnits, setfromUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    value: \"tspbz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    value: \"dspbz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    value: \"soup-bz\",\n    conversion: 15\n  }, {\n    label: \"Teacup (BZ)\",\n    value: \"cup-tea-bz\",\n    conversion: 250\n  }, {\n    label: \"Cup (BZ)\",\n    value: \"cup-bz\",\n    conversion: 240\n  }, {\n    label: \"Teaspoon (US)\",\n    value: \"tea-us\",\n    conversion: 4.92\n  }, {\n    label: \"Tablespoon (US)\",\n    value: \"table-us\",\n    conversion: 14.79\n  }, {\n    label: \"Cup (US)\",\n    value: \"cup-us\",\n    conversion: 240\n  }, {\n    label: \"Milliliter\",\n    value: \"ml\",\n    conversion: 1\n  }]);\n  const [toUnits, setToUnits] = useState([{\n    label: \"Teaspoon (BZ)\",\n    value: \"tea-bz\",\n    conversion: 5\n  }, {\n    label: \"Dessert spoon (BZ)\",\n    value: \"dessert-bz\",\n    conversion: 10\n  }, {\n    label: \"Soup spoon (BZ)\",\n    value: \"soup-bz\",\n    conversion: 15\n  }, {\n    label: \"Teacup (BZ)\",\n    value: \"cup-tea-bz\",\n    conversion: 250\n  }, {\n    label: \"Cup (BZ)\",\n    value: \"cup-bz\",\n    conversion: 240\n  }, {\n    label: \"Teaspoon (US)\",\n    value: \"tea-us\",\n    conversion: 4.92\n  }, {\n    label: \"Tablespoon (US)\",\n    value: \"table-us\",\n    conversion: 14.79\n  }, {\n    label: \"Cup (US)\",\n    value: \"cup-us\",\n    conversion: 240\n  }, {\n    label: \"Milliliter\",\n    value: \"ml\",\n    conversion: 1\n  }]);\n  useEffect(() => {\n    setConvertedVal(amount * fromUnit / toUnit);\n  }, [amount, fromUnit, toUnit]); // const \n\n  function handleChange(e) {\n    // chooseTheme(e.target.value);\n    let idx = e.target.selectedIndex;\n    console.log(e.target.options[idx].value);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, \"Dogs and cats\");\n  }\n\n  ; // function handleSubmit(e) {\n  //     e.preventDefault();\n  // };\n\n  return React.createElement(\"main\", {\n    className: \"unit-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"amount-span\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Enter Amount\", React.createElement(\"input\", {\n    id: \"amount\",\n    label: \"Amount\",\n    name: \"tsp-bz\",\n    type: \"number\",\n    autoFocus: true,\n    value: amount,\n    onChange: event => setAmount(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(\"select\", {\n    className: \"select-from\",\n    value: fromUnit,\n    onChange: event => setFromUnit(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, fromUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, label))), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, \" to \"), React.createElement(\"select\", {\n    className: \"select-to\",\n    value: toUnit,\n    onChange: event => setToUnit(event.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }, toUnits.map(({\n    label,\n    value,\n    conversion\n  }) => React.createElement(\"option\", {\n    key: value,\n    value: conversion,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, label)))), React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Conversion:\"), React.createElement(\"span\", {\n    className: \"converted-val\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, Number.isInteger(convertedVal) ? convertedVal : convertedVal.toFixed(2))));\n};\n\nexport default UnitSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/UnitSelect.js"],"names":["React","useContext","useState","useEffect","LanguageContext","Text","UnitSelect","convertedVal","setConvertedVal","amount","setAmount","fromUnit","setFromUnit","toUnit","setToUnit","fromUnits","setfromUnits","label","value","conversion","toUnits","setToUnits","handleChange","e","idx","target","selectedIndex","console","log","options","event","map","Number","isInteger","toFixed"],"mappings":"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","sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\n\nimport { LanguageContext, Text } from \"../contexts/LanguageContext\";\n\n\nconst UnitSelect = () => {\n    // const { dictionary, setLanguage } = useContext(LanguageContext);\n\n    const [convertedVal, setConvertedVal] = useState(1);\n    const [amount, setAmount] = useState(1);\n    const [fromUnit, setFromUnit] = useState(5);\n    const [toUnit, setToUnit] = useState(1);\n\n    const [fromUnits, setfromUnits] = useState([\n        { label: \"Teaspoon (BZ)\", value: \"tspbz\", conversion: 5 },\n        { label: \"Dessert spoon (BZ)\", value: \"dspbz\", conversion: 10 },\n        { label: \"Soup spoon (BZ)\", value: \"soup-bz\", conversion: 15 },\n        { label: \"Teacup (BZ)\", value: \"cup-tea-bz\", conversion: 250 },\n        { label: \"Cup (BZ)\", value: \"cup-bz\", conversion: 240 },\n        { label: \"Teaspoon (US)\", value: \"tea-us\", conversion: 4.92 },\n        { label: \"Tablespoon (US)\", value: \"table-us\", conversion: 14.79 },\n        { label: \"Cup (US)\", value: \"cup-us\", conversion: 240 },\n        { label: \"Milliliter\", value: \"ml\", conversion: 1 },\n    ]);\n\n    const [toUnits, setToUnits] = useState([\n        { label: \"Teaspoon (BZ)\", value: \"tea-bz\", conversion: 5 },\n        { label: \"Dessert spoon (BZ)\", value: \"dessert-bz\", conversion: 10 },\n        { label: \"Soup spoon (BZ)\", value: \"soup-bz\", conversion: 15 },\n        { label: \"Teacup (BZ)\", value: \"cup-tea-bz\", conversion: 250 },\n        { label: \"Cup (BZ)\", value: \"cup-bz\", conversion: 240 },\n        { label: \"Teaspoon (US)\", value: \"tea-us\", conversion: 4.92 },\n        { label: \"Tablespoon (US)\", value: \"table-us\", conversion: 14.79 },\n        { label: \"Cup (US)\", value: \"cup-us\", conversion: 240 },\n        { label: \"Milliliter\", value: \"ml\", conversion: 1 },\n    ]);\n\n    useEffect(() => {\n        setConvertedVal(amount *fromUnit / toUnit)\n    }, [amount,fromUnit, toUnit]);\n\n    // const \n\n    function handleChange(e) {\n        // chooseTheme(e.target.value);\n        let idx = e.target.selectedIndex;\n\n        console.log(e.target.options[idx].value);\n        return (\n            <div>Dogs and cats</div>\n        )\n    };\n\n    // function handleSubmit(e) {\n    //     e.preventDefault();\n    // };\n\n\n    return (\n        <main className=\"unit-form\">\n\n                    <div className='amount-span'>\n                    Enter Amount\n                    <input\n                        id=\"amount\"\n                        label=\"Amount\"\n                        name=\"tsp-bz\"\n                        type='number'\n\n                        autoFocus\n                        value={amount}\n                        onChange={event => setAmount(event.target.value)}\n                    />\n\n\n                    </div>\n                    <div>\n                        <select\n                            className=\"select-from\"\n                            value={fromUnit}\n                            onChange={event => setFromUnit(event.target.value)}\n                        >\n\n                        {fromUnits.map(({ label, value, conversion }) => (\n                            <option key={value} value={conversion}>\n                                {label}\n                                {/* <Text tid=\"value\" /> */}\n                                {/* {Text.tid} */}\n                            </option>\n                        ))}\n\n                        </select>\n\n                        <span> to </span>\n\n\n                        <select\n                            className=\"select-to\"\n                            value={toUnit}\n                            onChange={event => setToUnit(event.target.value)}\n                        >\n                            {toUnits.map(({ label, value, conversion }) => (\n                                <option key={value} value={conversion}>\n                                    {label}\n                                </option>\n                            ))}\n\n                        </select>\n\n                    </div>\n                    <div>\n                        <span>\n                            Conversion: \n                        </span>\n                        <span className='converted-val'>{(Number.isInteger(convertedVal) ? convertedVal: convertedVal.toFixed(2))}</span>\n                    </div>\n\n        </main>\n    );\n};\n\n\nexport default UnitSelect;\n"]},"metadata":{},"sourceType":"module"}