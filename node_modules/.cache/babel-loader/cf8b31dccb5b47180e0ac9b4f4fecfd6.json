{"ast":null,"code":"var _jsxFileName = \"/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js\";\nimport React, { useContext } from 'react';\nimport { languageOptions } from '../languages';\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst LanguageSelect = () => {\n  const languageContext = useContext(LanguageContext);\n\n  const handleLanguageChange = event => {\n    const selectedLanguage = languageOptions.find(item => item.id === event.target.value); // set selected language by calling context method\n\n    languageContext.setLanguage(selectedLanguage);\n  };\n\n  return React.createElement(\"section\", {\n    className: \"language-select\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, \"Choose Language\"), React.createElement(\"select\", {\n    className: \"toggle-switch\",\n    onChange: handleLanguageChange,\n    value: languageContext.language.id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"input\", {\n    type: \"checkbox\",\n    className: \"toggle-switch-checkbox\",\n    name: this.props.Name,\n    id: this.props.Name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"toggle-switch-label\",\n    htmlFor: this.props.Name,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    className: \"toggle-switch-inner\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"span\", {\n    className: \"toggle-switch-switch\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }))));\n};\n\nexport default LanguageSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js"],"names":["React","useContext","languageOptions","LanguageContext","LanguageSelect","languageContext","handleLanguageChange","event","selectedLanguage","find","item","id","target","value","setLanguage","language","props","Name"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,SAASC,eAAT,QAAgC,cAAhC;AAEA,SAASC,eAAT,QAAgC,6BAAhC;;AAEA,MAAMC,cAAc,GAAG,MAAM;AACzB,QAAMC,eAAe,GAAGJ,UAAU,CAACE,eAAD,CAAlC;;AAEA,QAAMG,oBAAoB,GAAIC,KAAD,IAAW;AACpC,UAAMC,gBAAgB,GAAGN,eAAe,CAACO,IAAhB,CAAqBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYJ,KAAK,CAACK,MAAN,CAAaC,KAAtD,CAAzB,CADoC,CAEpC;;AACAR,IAAAA,eAAe,CAACS,WAAhB,CAA4BN,gBAA5B;AACH,GAJD;;AAMA,SACI;AAAS,IAAA,SAAS,EAAC,iBAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAiBI;AAAQ,IAAA,SAAS,EAAC,eAAlB;AACI,IAAA,QAAQ,EAAEF,oBADd;AAEI,IAAA,KAAK,EAAED,eAAe,CAACU,QAAhB,CAAyBJ,EAFpC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII;AACI,IAAA,IAAI,EAAC,UADT;AAEI,IAAA,SAAS,EAAC,wBAFd;AAGI,IAAA,IAAI,EAAE,KAAKK,KAAL,CAAWC,IAHrB;AAII,IAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,IAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAUI;AAAO,IAAA,SAAS,EAAC,qBAAjB;AAAuC,IAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,IAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAM,IAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAM,IAAA,SAAS,EAAC,sBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CAVJ,CAjBJ,CADJ;AAsCH,CA/CD;;AAmDA,eAAeb,cAAf","sourcesContent":["\nimport React, { useContext } from 'react';\n\nimport { languageOptions } from '../languages';\n\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst LanguageSelect = () => {\n    const languageContext = useContext(LanguageContext);\n\n    const handleLanguageChange = (event) => {\n        const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n        // set selected language by calling context method\n        languageContext.setLanguage(selectedLanguage);\n    };\n\n    return (\n        <section className='language-select'>\n            <h2>\n                Choose Language\n            </h2>\n            {/* <select \n                onChange={handleLanguageChange}\n                value={languageContext.language.id}\n            >\n                {languageOptions.map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                    >\n                        {item.text}\n                    </option>\n                ))}\n            </select> */}\n            <select className=\"toggle-switch\"\n                onChange={handleLanguageChange}\n                value={languageContext.language.id}\n            >\n                <input\n                    type=\"checkbox\"\n                    className=\"toggle-switch-checkbox\"\n                    name={this.props.Name}\n                    id={this.props.Name}\n                />\n                <label className=\"toggle-switch-label\" htmlFor={this.props.Name}>\n                    <span className=\"toggle-switch-inner\" />\n                    <span className=\"toggle-switch-switch\" />\n                </label>\n\n            </select>\n\n        </section>\n\n    );\n};\n\n\n\nexport default LanguageSelect;\n"]},"metadata":{},"sourceType":"module"}