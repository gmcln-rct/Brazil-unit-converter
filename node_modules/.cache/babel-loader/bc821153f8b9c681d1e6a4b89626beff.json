{"ast":null,"code":"import React,{useContext}from'react';import{languageOptions}from'../languages';import{LanguageContext}from'../contexts/LanguageContext';var LanguageSelect=function LanguageSelect(){var languageContext=useContext(LanguageContext);var handleLanguageChange=function handleLanguageChange(event){var selectedLanguage=languageOptions.find(function(item){return item.id===event.target.value;});// set selected language by calling context method\nlanguageContext.setLanguage(selectedLanguage);};return React.createElement(\"section\",{className:\"language-select\"},React.createElement(\"h2\",null,\"Choose Language\"),React.createElement(\"select\",{onChange:handleLanguageChange,value:languageContext.language.id},languageOptions.map(function(item){return React.createElement(\"option\",{key:item.id,value:item.id},item.text);})));};export default LanguageSelect;","map":{"version":3,"sources":["/Users/kawabata/Desktop/currentprojects/bz-unit-converter/brasil-unit-converter/src/components/LanguageSelect.js"],"names":["React","useContext","languageOptions","LanguageContext","LanguageSelect","languageContext","handleLanguageChange","event","selectedLanguage","find","item","id","target","value","setLanguage","language","map","text"],"mappings":"AACA,MAAOA,CAAAA,KAAP,EAAgBC,UAAhB,KAAkC,OAAlC,CAEA,OAASC,eAAT,KAAgC,cAAhC,CAEA,OAASC,eAAT,KAAgC,6BAAhC,CAEA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CACzB,GAAMC,CAAAA,eAAe,CAAGJ,UAAU,CAACE,eAAD,CAAlC,CAEA,GAAMG,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,CAACC,KAAD,CAAW,CACpC,GAAMC,CAAAA,gBAAgB,CAAGN,eAAe,CAACO,IAAhB,CAAqB,SAAAC,IAAI,QAAIA,CAAAA,IAAI,CAACC,EAAL,GAAYJ,KAAK,CAACK,MAAN,CAAaC,KAA7B,EAAzB,CAAzB,CACA;AACAR,eAAe,CAACS,WAAhB,CAA4BN,gBAA5B,EACH,CAJD,CAMA,MACI,gCAAS,SAAS,CAAC,iBAAnB,EACI,gDADJ,CAII,8BACI,QAAQ,CAAEF,oBADd,CAEI,KAAK,CAAED,eAAe,CAACU,QAAhB,CAAyBJ,EAFpC,EAIKT,eAAe,CAACc,GAAhB,CAAoB,SAAAN,IAAI,QACrB,+BACI,GAAG,CAAEA,IAAI,CAACC,EADd,CAEI,KAAK,CAAED,IAAI,CAACC,EAFhB,EAIKD,IAAI,CAACO,IAJV,CADqB,EAAxB,CAJL,CAJJ,CADJ,CAsCH,CA/CD,CAmDA,cAAeb,CAAAA,cAAf","sourcesContent":["\nimport React, { useContext } from 'react';\n\nimport { languageOptions } from '../languages';\n\nimport { LanguageContext } from '../contexts/LanguageContext';\n\nconst LanguageSelect = () => {\n    const languageContext = useContext(LanguageContext);\n\n    const handleLanguageChange = (event) => {\n        const selectedLanguage = languageOptions.find(item => item.id === event.target.value);\n        // set selected language by calling context method\n        languageContext.setLanguage(selectedLanguage);\n    };\n\n    return (\n        <section className='language-select'>\n            <h2>\n                Choose Language\n            </h2>\n            <select \n                onChange={handleLanguageChange}\n                value={languageContext.language.id}\n            >\n                {languageOptions.map(item => (\n                    <option\n                        key={item.id}\n                        value={item.id}\n                    >\n                        {item.text}\n                    </option>\n                ))}\n            </select>\n            {/* <div className=\"toggle-switch\"\n                onChange={handleLanguageChange}\n                value={languageContext.language.id}\n            >\n                <input\n                    type=\"checkbox\"\n                    className=\"toggle-switch-checkbox\"\n                    name={languageContext.language.id}\n                    id={languageContext.language.id}\n                />\n                <label className=\"toggle-switch-label\" htmlFor={languageContext.language.id}>\n                    <span className=\"toggle-switch-inner\" />\n                    <span className=\"toggle-switch-switch\" />\n                </label>\n\n            </div> */}\n\n        </section>\n\n    );\n};\n\n\n\nexport default LanguageSelect;\n"]},"metadata":{},"sourceType":"module"}